# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

interface BeFollowedData {
  uuid: String!
}

type UserData implements UserInfoInter {
  name: String!
  user_img: String!
  uuid: String!
}

interface UserInfoInter {
  name: String!
  user_img: String!
  uuid: String!
}

type UsersDATA {
  name: String
  user_img: String
  uuid: String
}

type Dynamic {
  content: String!
  type: String!
  time_tamp: String!
  dynamic_id: String!
}

type DynamicApiRes {
  dynamic: [Dynamic!]!
  next: Float!
  count: Float!
}

type BaseUserInfo {
  user_img: String!
  name: String!
}

type BaseMusterArticle {
  outer_id: String
}

type BaseMusterData {
  gather_name: String
  gather_id: String
  gather_img: String
  article_description: String
  article_type: String
  articles: [BaseMusterArticle!]!
}

type InfoReadData implements InfoReadDataInter {
  reading_time: String!
}

interface InfoReadDataInter {
  reading_time: String!
}

type MessageData {
  timestamp: String!
  title: String!
  article_id: String!
  article_type: String!
  info: InfoReadData!
}

type MessageDataRes {
  data: [MessageData!]!
  next: Float!
}

type Label {
  name: String!
  description: String!
  category: String!
  label_id: String!
}

type ParalArticleInfo implements ParalArticleInfoInter {
  title: String!
  outer_id: String!
}

interface ParalArticleInfoInter {
  title: String!
  outer_id: String!
}

type BeFollowed implements BeFollowedInter {
  article_id: String!
  user_id: String!
}

interface BeFollowedInter {
  article_id: String!
  user_id: String!
}

type Draft implements DraftInter {
  article_id: String!
  time_stmap: String!
  user_id: String!
}

interface DraftInter {
  article_id: String!
  time_stmap: String!
  user_id: String!
}

type Collection implements CollectionInter {
  collection_id: Float!
  article_id: String!
  user_id: String!
}

interface CollectionInter {
  collection_id: Float!
  article_id: String!
  user_id: String!
}

type Zan implements ZanInter {
  article_id: String!
  authorId: String!
}

interface ZanInter {
  article_id: String!
  authorId: String!
}

type Category implements CategoryInter {
  name: String!
  description: String!
  category_id: String!
  labels: [Label!]!
}

interface CategoryInter {
  name: String!
  description: String!
  category_id: String!
  labels: [Label!]!
}

type GatherRes implements GatherResInterface {
  articles: [ParalArticleInfo!]!
  gather_id: String!
  gather_name: String!
  article_type: String!
}

interface GatherResInterface {
  articles: [ParalArticleInfo!]!
  gather_id: String!
  gather_name: String!
  article_type: String!
}

type ArticleData implements ArticleInter {
  id: Float!
  title: String!
  outer_id: String!
  article: String!
  description: String!
  hot: Float!
  gather_id: String!
  article_img: String!
  article_type: String!
  edit_time: String!
  release: Boolean!
  author: UserData
  zan_status: Boolean
  collection_status: Boolean
  follow_status: Boolean
  follow_user: Boolean
  zan: [Zan!]!
  beFollowed: [BeFollowed!]
  collection: [Collection!]
  draft: [Draft!]!
  labels: [Label!]!
  categorys: [Category!]!
  gather: GatherRes
}

interface ArticleInter {
  id: Float!
  title: String!
  outer_id: String!
  article: String!
  description: String!
  hot: Float!
  gather_id: String!
  article_img: String!
  article_type: String!
  edit_time: String!
  release: Boolean!
  author: UserData
}

type RecordsArticleData implements ArticleInter {
  id: Float!
  title: String!
  outer_id: String!
  article: String!
  description: String!
  hot: Float!
  gather_id: String!
  article_img: String!
  article_type: String!
  edit_time: String!
  release: Boolean!
  author: UserData
  timestamp: String!
  zan: [Zan!]!
}

type RecordsDataPagenation {
  data: [RecordsArticleData!]!
  next: Float!
}

type ArticleDataPagenation {
  data: [ArticleData!]!
  next: Float!
}

type GatherData implements GatherInter {
  gather_name: String!
  article_description: String!
  type: String!
  gather_id: String!
  gather_img: String!
  authorId: String!
  articles: [ArticleData!]!
  article_type: String!
  author: UserData
}

interface GatherInter {
  gather_name: String!
  article_description: String!
  type: String!
  gather_id: String!
  gather_img: String!
  authorId: String!
  articles: [ArticleData!]!
  article_type: String!
  author: UserData
}

type AllArticlesInfo implements GatherInter {
  gather_name: String!
  article_description: String!
  type: String!
  gather_id: String!
  gather_img: String!
  authorId: String!
  articles: [ArticleData!]!
  article_type: String!
  author: UserData!
}

type AllArticlesPagenation {
  data: [AllArticlesInfo!]!
  next: Float!
}

type AllGatherPagenation {
  data: [GatherData!]!
  next: Float!
}

type WritingArticle {
  type: String!
  gather_id: String!
  gather_name: String!
  gather_img: String!
  category: String!
  article_description: String!
  labels: [String!]!
  article_data: [ArticleData!]!
}

type ArticlePanelStatus implements ArticlePanelStatusInter {
  zan_status: Boolean!
  collect_status: Boolean!
  follow_status: Boolean!
}

interface ArticlePanelStatusInter {
  zan_status: Boolean!
  collect_status: Boolean!
  follow_status: Boolean!
}

type UserBeFollowed implements UserBeFollowedInter {
  info: [BeFollowedData!]!
}

interface UserBeFollowedInter {
  info: [BeFollowedData!]!
}

type RecommendRes {
  data: [ArticleData!]!
  next: Float!
}

type RelateRecommendRes {
  data: [String!]!
  next: Float!
}

type Query {
  getArticleById(article_id: String!, token: String): ArticleData!
  getArticleByIdNotFB(article_id: String!): ArticleData!
  removeArticleById(id: String!): Float!
  getRecords(page: Float!): RecordsDataPagenation!
  Search(query: String!, page: Float!): ArticleDataPagenation!
  SearchAuthorArticle(query: String!, author: String!, page: Float!): AllArticlesPagenation!
  SearchAllArticle(query: String!, page: Float!): ArticleDataPagenation!
  getUserSavedApi: ArticleDataPagenation!
  dynamicApi(content: String!, type: String!): ArticleData!
  getDraft(page: Float!): ArticleDataPagenation!
  getCollectionArticles(page: Float!): ArticleDataPagenation!
  indexPanelArticle: Float!
  getArticleNeighbors(article_id: String!): Float!
  getUserMessage(page: Float!): MessageDataRes
  getWritingArticle(article_id: String!): WritingArticle!
  getArticlePanelStatus(artcle_id: String!): ArticlePanelStatus!
  getMusterColumn: [GatherData!]!
  getColumnArticles(data: String!): GatherData!
  getUserInfo: BaseUserInfo!
  getDynamic(page: Float!): DynamicApiRes!
  getBaseMusterInfo: [BaseMusterData!]
  getSingleInfo: [ArticleData!]!
  getAllColumnArtilces(page: Float!): AllGatherPagenation!
  getGatherArtilces: [GatherData!]!
  getAllArticlesPagenation(page: Float!): AllArticlesPagenation!
  getAllArticles: [AllArticlesInfo!]!
  getUserData: UsersDATA
  getBeFollowedNum: UserBeFollowed!
  getUserRecommend(page: Float!): [String!]
  getLabels: [Label!]!
  putLabel(id: String!, category: String!, desc: String!): Float!
  getCategorys: [Category!]!
  recommendList(label: String!, newest: String!, page: Float!): RecommendRes
  userRecommend(page: Float!): RelateRecommendRes!
  relateRecommend(label: String!): [ArticleData!]!
  emit: Float!
  setListen: Float!
}

type Mutation {
  insertFeeback(article_id: String!, vid: String!): Float!
  collectArticle(id: String!): Float!
  followArticle(article_id: String!): Float!
  Login(phone: String!): Float!
  addArticle(data: SavedArticleInput!): Float!
  savedArticle(data: SavedArticleInput!): Float!
  createMuster(data: GatherInput!): Float!
  addZan(data: String!): Float!
  LogOut: Float!
  followedUser(followed_id: String!): Float!
  createManyLabels(data: CreateLabelInput!): Label!
  createCategory(data: CreateCategoryInput!): Category!
}

input SavedArticleInput {
  gather_name: String
  article_type: String!
  article_description: String
  gather_img: String
  article_data: [ArticleInput!]!
  labels: [String!]!
  gather_id: String!
  category: String!
}

input ArticleInput {
  title: String!
  outer_id: String!
  article: String!
  article_img: String!
  edit_time: String!
  description: String
}

input GatherInput {
  gather_name: String!
  article_description: String!
  gather_img: String!
}

input CreateLabelInput {
  name: String!
  description: String!
  label_id: String!
  categorys: String!
}

input CreateCategoryInput {
  name: String!
  description: String!
  category_id: String!
}